buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net' }
        maven {url='https://repo.spongepowered.org/repository/maven-public'}
        maven { url = 'https://maven.parchmentmc.org' }
    }

    
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath group: 'org.spongepowered', name:'mixingradle', version: '0.7-SNAPSHOT', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}


plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'de.undercouch.download' version '3.3.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'


configurations {
    optionalRuntime
    runtime.extendsFrom optionalRuntime // optionalRuntime dependencies are downloaded but not exported to POM
}

group = "de.teamlapen.vampirism"
archivesBaseName = "Vampirism"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
ext.mod_version="Test"
ext.type="test"


sourceSets {
    api
    lib {
        compileClasspath += configurations["minecraft"]
    }
    //noinspection GroovyAssignabilityCheck
    main {
         java{
             exclude 'de/teamlapen/vampirism/modcompat/jei' //TODO 1.18 remove
         }
        //noinspection GroovyAssignabilityCheck
        resources {
            srcDirs += 'src/generated/resources'
            exclude '.cache'
        }
        compileClasspath += sourceSets.lib.output
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
    test {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
}


apply from: 'gradle/versioning.gradle'
apply from: 'gradle/forge.gradle'
apply from: 'gradle/artifacts.gradle'
apply from: 'gradle/deploy.gradle'


configurations {
    apiCompile.extendsFrom(compile)
    apiImplementation.extendsFrom(implementation)
    apiRuntimeOnly.extendsFrom(runtimeOnly)
}

idea {
    module {
        for (String excludeDirName in ["run", "out", "logs", "gradle"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}